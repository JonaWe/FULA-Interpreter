let
    # isN gibt true aus wenn die x eine Nat체rliche Zahl ist
    isN := {x ->
            x%1 == 0 && x > 1
        }

    # sub gibt true zur체ck wenn sich y durch keine ganze Zahl kleiner oder gleich x Teilen l채sst
    sub := {x, y ->
            x<=1 || y%x != 0 && sub(x-1, y)
        }

    # isPrimeNumber gibt true zur체ck, wenn x eine Primzahl ist
    isPrimeNumber := {x ->
            isN(x) && sub(x-1, x)
        }

    # printPrimes gibt alle Primzahlen von current bis max aus
    printPrimes := {current, max ->
            if current <= max
                printPrimes(
                    if isPrimeNumber(current)
                        print current + 1
                    else
                        current + 1
                    , max
                )
            else
                0
        }
in
    printPrimes(0, 10)
end
